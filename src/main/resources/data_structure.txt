1. Хранение уникальных идентификаторов пользователей
В системе есть список уникальных идентификаторов пользователей. Необходимо быстро проверять, присутствует ли пользователь с заданным идентификатором.

Решение:
	- Проверка уникальности id
	- Быстрый доступ

Ответ: Множество


2. Очередь задач для обработки
Система должна обрабатывать запросы в порядке их поступления. Требуется поддерживать последовательность.

Решение:
	- Порядок поступления
	- Последовательность

Ответ: Очередь FIFO


3. Хранение ключей и значений
Необходимо хранить настройки приложения, где каждый параметр имеет имя (ключ) и значение.

Решение:
	- Параметр ключ-значение

Ответ: Хеш-таблица

4. Иерархия сотрудников компании
Требуется сохранить данные о сотрудниках в виде дерева: каждый сотрудник имеет подчинённых.

Решение:
	- Иерархия. Сотрудник -> подчиненный
	- Данные в виде дерева

Ответ: Двоичное дерево


5. Поиск элементов по приоритету
Система обрабатывает задачи, причём приоритет задачи определяет, когда она будет выполнена.

Решение:
	- Добавление задачи по приоритету

Ответ: Дека


6. Управление друзьями пользователя
Требуется хранить связи между пользователями в социальной сети, где каждый пользователь может быть связан с несколькими другими.

Решение:
	- Связи не линейные
	- У одного узла может быть много связей

Ответ: Граф


7. Упорядоченный список
Необходимо хранить список чисел в отсортированном виде, чтобы быстро находить минимальное и максимальное значения.

Решение:
	- Отсортированный список. Значит упорядоченный
	- Для нахождения min, max нужен быстрый доступ
	- Могут быть дубликаты
	- Фиксированный список

Ответ: Массив

8. Учет посещений страниц
Система должна отслеживать уникальные посещения страниц на веб-сайте и вести подсчёт общего числа посещений.

Подсказка: выбор структуры данных может быть разный в зависимости от уточнения, уникальные ИЛИ не уникальные общие посещения мы считаем.

Решение:
	- Проверка на уникальность
	- Обновление

Ответ: Хеш-таблица.


9. История действий пользователя
Необходимо хранить список последних действий пользователя, чтобы можно было отменить или повторить действия.

Решение:
	- Последние действия
	- Отменить\повторить

Ответ: Стек. LIFO


10. Структура телефонной книги
Требуется хранить имена и номера телефонов, чтобы быстро находить номер по имени.

Решение:
	- Быстро находить по имени
	- И имена и телефон

Ответ: хеш-таблица.

11. Проверка корректности скобочной последовательности
Пользователь вводит строку, содержащую скобки. Нужно определить, правильно ли расставлены скобки.

Решение:
	-

Ответ: Стек.


12. Хранение объектов с частым доступом
Требуется хранить фиксированное количество элементов, которые часто изменяются, с быстрым доступом к любому из них.

Решение:
	- Фиксированное кол-во
	- Быстрый доступ
	- Частое изменение

Ответ: Массив.


13. Уникальные слова в тексте
Дан текст, нужно сохранить все уникальные слова и определить их количество.

Решение:
	- Уникальные слова
	- Добавление


Ответ: Множество


14. Структура электронной очереди
В поликлинике пациенты записываются в очередь, и каждый должен быть вызван в порядке записи.

Решение:
	- LIFO

Ответ: Очередь LIFO


15. Список дел
Требуется сохранить список задач, который можно пополнять, удалять и сортировать по сроку выполнения.

Решение:
	- Добавление
	- удаление
	- сортировка

Ответ: Список


16. Анализ частоты слов
Требуется определить, сколько раз каждое слово встречается в тексте.

Решение:
	"Парус" : 4

Ответ: Хеш-таблица


17. Система рейтингов
Вам нужно хранить список игроков с их рейтингами, чтобы быстро находить игрока с самым высоким рейтингом.

Решение:


Ответ: Приоритетная очередь


18. Проверка дубликатов в потоке данных
Данные поступают в потоковом режиме, и нужно проверять, был ли данный элемент уже получен ранее.

Решение:


Ответ: Множество